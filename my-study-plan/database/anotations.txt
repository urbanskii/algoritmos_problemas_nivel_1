
fundamentos,

conceito base: entidade X relacionamento
    * Atributos: campo, coluna, tipo
    * Cliente <- <comprou> -> Produto

ACID - Atomicidade, consistência, isolamento e durabilidade - Garante integridade

get started postgreSQL

* Single instance, replication (primary-standby)


para instalar postgreSQL

https://www.postgresql.org/download/linux/ubuntu/

para instalar o pgadmin4

necessario instalar o pyenv e virtual com o python,

https://github.com/pyenv/pyenv

mudar para o diretorio onde esta instalando o python na virtualenv
virtualenv --python=/usr/local/bin/python3.8 pgadmin_env
comando para verificar which python


par funcionar o virtualenv no zsh,

For Zsh:

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
echo 'eval "$(pyenv init -)"' >> ~/.zshrc

exec "$SHELL"

https://zexergy.com/blog/Install-Postgresql/

caso esqueça senha do usuario do pgadmin

 sqlite3 pgadmin4.db "UPDATE USER SET LOCKED = false, LOGIN_ATTEMPTS = 0 WHERE USERNAME = 'marcos.urbanski@gmail.com';" ".exit"

----------------------------------------------------------------------------------------------------

Criando database e iniciando o pgAdmin #208

para acessar o banco,

    sudo -u postgres psql

para listar todos os databases criados,

    postgres=# \l

para listar os usuarios
    
    \du

para criar banco

    CREATE DATABASE catalogo;

CREATE TABLE tb_diretor(
id_diretor int NOT NULL,
nome_diretor varchar(50),
PRIMARY KEY (id_diretor)
);


CREATE TABLE tb_filme(
id_filme int NOT NULL,
nome_filme varchar(50),
id_diretor int NOT NULL,
id_produtora int NOT NULL,
genero varchar(25),
PRIMARY KEY (id_filme),
FOREIGN KEY (id_diretor) REFERENCES tb_diretor(id_diretor)
);


CREATE TABLE tb_produtora(
id_produtora int NOT NULL,
nome_produtora varchar(25),
PRIMARY KEY (id_produtora)
);

foi alterado a tabela filme pois não estava inserido o campo de referencia para a tabela tb_produtora


ALTER TABLE tb_filme
ADD CONSTRAINT fk_id_produtora FOREIGN KEY (id_produtora) REFERENCES tb_produtora(id_produtora);


----------------------------------------------------------------------------------------------------

inserindo valores nas tabelas,

INSERT INTO tb_diretor
VALUES 
(1, 'Steven Spielberg'),
(2, 'James Cameron'),
(3, 'Quentin Tarantino');

select * from tb_diretor


INSERT into tb_produtora (id_produtora, nome_produtora) VALUES (1, '20th Century Studios');
INSERT into tb_produtora (id_produtora, nome_produtora) VALUES (2, 'Sony Pictures');
INSERT into tb_produtora (id_produtora, nome_produtora) VALUES (3, 'Paramount Pictures');


INSERT INTO tb_filme
VALUES 
(1, 'Django Livre',3,2,'Faroeste/Ação'),
(2, 'Avatar',2,1, 'Ficção Cientifica'),
(3, 'O Resgate do Soldado Ryan',1,3, 'Guerra');

SELECT * FROM public.tb_diretor INNER JOIN tb_filme ON tb_filme.id_diretor = tb_diretor.id_diretor;




